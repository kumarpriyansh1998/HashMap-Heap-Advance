class Solution {
    public List<String> topKFrequent(String[] words, int k) {
        
        
        HashMap<String,Integer> hmap = new HashMap<>();
        for(int i=0;i<words.length;i++){
            String current = words[i];
            hmap.put(current,hmap.getOrDefault(current,0)+1);
        }
        
        
        PriorityQueue<Map.Entry<String,Integer>> pq = new PriorityQueue<>((a,b)->{
            
            if(b.getValue().equals(a.getValue())){
                return a.getKey().compareTo(b.getKey());
            } 
            return b.getValue()-a.getValue();
        });
        
        pq.addAll(hmap.entrySet());
        
            
        int i=0;
        List<String> answer = new ArrayList<>();
        while(i<k){
            answer.add((String)pq.remove().getKey());
            i++;
        }
        
        return answer;
        
        
    }
}
