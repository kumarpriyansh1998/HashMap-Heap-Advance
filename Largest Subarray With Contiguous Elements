https://www.pepcoding.com/resources/data-structures-and-algorithms-in-java-levelup/hashmap-and-heaps/largest-subarray-with-contiguous-elements-official/ojquestion
import java.util.*;

public class Main {

	public static int solution(int[] arr) {
		// write your code here
		int n = arr.length;
		int max_length = 1;
		for(int i=0;i<n;i++){
		    int max = arr[i];
		    int min = arr[i];
		    HashSet<Integer> hset = new HashSet<>();
		    for(int j=i;j<n;j++){
		        if(hset.contains(arr[j])){
		            break;
		        }
		        else hset.add(arr[j]);
		        
		        max = Math.max(max,arr[j]);
		        min = Math.min(min,arr[j]);
		        if(max-min == j-i){
		            max_length = Math.max(max_length,j-i+1);
		        }
		        
		        
		        
		    }
		}
		
		return max_length;

		
	}
	
	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		int[] arr = new int[scn.nextInt()];
		for (int i = 0; i < arr.length; i++) {
			arr[i] = scn.nextInt();
		}
		System.out.println(solution(arr));
	}

}
